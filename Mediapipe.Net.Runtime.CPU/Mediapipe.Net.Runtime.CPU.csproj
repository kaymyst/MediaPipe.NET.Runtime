<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup Label="Project">
    <TargetFramework>net480</TargetFramework>
    <OutputType>Library</OutputType>
    <AssemblyTitle>Mediapipe.Net.Runtime.CPU</AssemblyTitle>
    <AssemblyName>Mediapipe.Net.Runtime.CPU</AssemblyName>
  </PropertyGroup>

  <PropertyGroup Label="Nuget">
    <IsPackable>true</IsPackable>
    <PackageId>Mediapipe.Net.Runtime.CPU.kaymyst</PackageId>
    <Version>1.0.4</Version>
    <Authors>homuler;Vignette;kaymyst</Authors>
    <PackageTags>Google;Mediapipe;Tracking;Media Analysis</PackageTags>
    <Title>Mediapipe.Net.Runtime.CPU.kaymyst</Title>
    <Description>Native runtime libraries for MediaPipe.NET (CPU) (MediaPipe v0.10.9)</Description>
    <Copyright>2024 homuler and kaymyst</Copyright>
    <RepositoryUrl>https://github.com/kaymyst/MediaPipe.NET.Runtime</RepositoryUrl>
    <PackageProjectUrl>https://github.com/kaymyst/MediaPipe.NET.Runtime</PackageProjectUrl>
    <PackageLicenseFile>LICENSE</PackageLicenseFile>
    <IncludeBuildOutput>false</IncludeBuildOutput>
  </PropertyGroup>

  <PropertyGroup Label="Pre-build task">
    <PreBuildEvent Condition=" '$(OS)' == 'Windows_NT' ">
      if not exist "$(MSBuildProjectDirectory)\runtimes\win-x64\native\mediapipe_c.dll" (
          cd $(MSBuildProjectDirectory)\..\
          python3 build.py build --desktop cpu --opencv cmake -vv
      )
    </PreBuildEvent>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <PackageReadmeFile>Readme.md</PackageReadmeFile>
    <PlatformTarget>x64</PlatformTarget>
  </PropertyGroup>

  <ItemGroup Label="Native libraries">
    <!-- See https://github.com/ppy/osu-framework/blob/master/osu.Framework.NativeLibs/osu.Framework.NativeLibs.csproj. -->
    <None Include="runtimes\**\*" Pack="true" PackagePath="runtimes" />
    <None Include="..\Readme.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
    <None Include="_._">
      <!-- Means this package doesn't provide any reference assembly to the target framework.
           nupkg is a zip file and doesn't has concept for folders,
           so there must be something under the path, otherwise client will consider this package broken.
           See https://docs.microsoft.com/en-us/nuget/reference/errors-and-warnings/nu5128#scenario-2 . -->
      <Pack>true</Pack>
      <PackagePath>lib\$(TargetFramework)</PackagePath>
    </None>
  </ItemGroup>

  <ItemGroup Label="Documents">
    <None Include="..\LICENSE" Pack="true" PackagePath="" />
  </ItemGroup>

</Project>
